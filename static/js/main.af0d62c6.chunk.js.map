{"version":3,"sources":["App.tsx","components/Goods.tsx","index.tsx"],"names":["SortType","Goods","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","isOrderChanged","reorderedGoods","visibleGoods","sort","acc","curr","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAAyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDNFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,gBAAAA,E,qBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EACJJ,IAAaT,EAASQ,MACnBG,EAECG,EAjCD,SACLZ,EADK,GAGJ,IADCO,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOb,GAmBzB,OAjBAa,EAAaC,MAAK,SAACC,EAAKC,GACtB,OAAQT,GACN,KAAKT,EAASmB,OACZ,OAAOF,EAAIG,OAASF,EAAKE,OAE3B,KAAKpB,EAASqB,SACZ,OAAOJ,EAAIK,cAAcJ,GAE3B,QACE,OAAO,MAITP,GACFI,EAAaQ,UAGRR,EAUgBS,CACrBnB,EACA,CAAEM,aAAYF,aAQhB,OACE,mCACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaT,EAASqB,WAEtCO,QAAS,kBAAMlB,EAAYV,EAASqB,WANtC,iCAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaT,EAASmB,SAEtCS,QAAS,kBAAMlB,EAAYV,EAASmB,SANtC,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAc,SAAAM,GAAI,OAAKA,MANxC,qBAUCL,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA7CS,WACnBhB,GAAc,GACdF,EAAYV,EAASQ,OAwCb,sBASJ,6BACE,cAAC,EAAD,CAAON,MAAOY,YErHxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af0d62c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Goods } from './components/Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  LENGTH = 'length',\n  ALPHABET = 'alphabet',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((acc, curr) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return acc.length - curr.length;\n\n      case SortType.ALPHABET:\n        return acc.localeCompare(curr);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const isOrderChanged = (\n    sortType !== SortType.NONE\n    || isReversed\n  );\n  const reorderedGoods = getReorderGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const resetChanges = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => setSortType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => setIsReversed(curr => !curr)}\n          >\n            Reverse\n          </button>\n          {isOrderChanged && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetChanges}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          <Goods goods={reorderedGoods} />\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  goods: string[];\n}\n\nexport const Goods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}